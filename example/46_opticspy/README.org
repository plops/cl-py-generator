- install
#+begin_example
cd ~/src
git clone https://github.com/Sterncat/opticspy
pip3 install --user -e opticspy

# edit opticspy/__init__.py and remove mplot3d
#+end_example


- http://opticspy.org/

- plan for gen01
  - keep system information in pandas dataframe
  - use opticspy to compute paraxial parameters and pupil, use its index model
    - i think opticspy just uses the pytmm material database 
  - implement sequential raytracer through spheres with jax
  - compute waveaberration


- references
  - short overview of jax https://www.youtube.com/watch?v=0mVmRHMaOJ4
  - 1h talk on jax: https://www.youtube.com/watch?v=BzuEGdGHKjc
#+begin_example
jax.vmap        apply to each element of a vector
jax.make_jaxpr  show the internal decomposition of the xla code
jax.devices()   number of devs
jax.pmap        shard accross multiple devices

psum axis_name

jvp
vjp


  
#+end_example

- oryx probabilistic programming
  - given a function that generates a sample from a distribution can
   you give back a function that returns the log joint density
  - inverse .. automatic function inversion (maybe useful to find pupil?)
  - reap, plant .. change values

- http://resources.mpi-inf.mpg.de/lensflareRendering/pdf/flare.pdf
  - ray tracing lens flares
  - only sequences involving an even number of reflections impinge on the sensor
  - those with more than two reflections can usually be ignored
  - enumerate all two-reflection sequences
    - for n fresnel interfaces in an optical system, there are N=n*(n-1)/2 such sequences
  - at each intersection compare hitpoint of ray with diameter of
    surface, record maximum normalized distance from the optical axis
    - r_rel = max (r_rel, r/r_surface)
  - as ray passes through aperture plane, a pair of intersection
    coordinates (ua, va) is stored
