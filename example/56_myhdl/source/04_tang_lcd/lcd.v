// File: lcd.v
// Generated by MyHDL 0.11
// Date: Fri Jun 11 19:27:22 2021


`timescale 1ns/10ps

module lcd (
    pixel_clk,
    n_rst,
    lcd_de,
    lcd_hsync,
    lcd_vsync,
    data_r,
    data_g,
    data_b
);


input pixel_clk;
input n_rst;
input lcd_de;
input lcd_hsync;
input lcd_vsync;
output [4:0] data_r;
reg [4:0] data_r;
output [4:0] data_g;
reg [4:0] data_g;
output [5:0] data_b;
reg [5:0] data_b;

reg [10:0] pixel_count;
reg [9:0] line_count;



always @(posedge pixel_clk, negedge n_rst) begin: LCD_LOGIC_COUNT
    if ((n_rst == 0)) begin
        line_count <= 0;
        pixel_count <= 0;
    end
    else begin
        if ((pixel_count == 1192)) begin
            line_count <= (line_count + 1);
            pixel_count <= 0;
        end
        else begin
            if ((line_count == 548)) begin
                line_count <= 0;
                pixel_count <= 0;
            end
            else begin
                pixel_count <= (pixel_count + 1);
            end
        end
    end
end


always @(posedge pixel_clk, negedge n_rst) begin: LCD_LOGIC_DATA
    if ((n_rst == 0)) begin
        data_r <= 0;
        data_b <= 0;
        data_g <= 0;
    end
end


always @(line_count, pixel_count) begin: LCD_LOGIC_SYNC
    reg lcd_hsync;
    reg lcd_vsync;
    reg lcd_de;
    if (((1 <= pixel_count) & (pixel_count <= (800 + 182)))) begin
        lcd_hsync = 0;
    end
    else begin
        lcd_hsync = 1;
    end
    if (((5 <= line_count) & (line_count <= 548))) begin
        lcd_vsync = 0;
    end
    else begin
        lcd_vsync = 1;
    end
    if ((((182 <= pixel_count) & (pixel_count <= (800 + 182))) & ((6 <= line_count) & ($signed({1'b0, line_count}) <= (480 + (6 - 1)))))) begin
        lcd_de = 1;
    end
    else begin
        lcd_de = 0;
    end
end

endmodule
