// File: mem.v
// Generated by MyHDL 0.11
// Date: Mon Jun 21 04:00:22 2021


`timescale 1ns/10ps

module mem (
    clk,
    adr,
    we,
    di,
    do
);


input clk;
input [7:0] adr;
input we;
input [7:0] di;
output [7:0] do;
reg [7:0] do;

reg [7:0] ram [0:256-1];



always @(posedge clk) begin: MEM_LOGIC
    if (we) begin
        ram[adr] <= di;
    end
    else begin
        if ((adr < 13)) begin
            if ((adr == 0)) begin
                do <= 1;
            end
            else if ((adr == 1)) begin
                do <= 0;
            end
            else if ((adr == 2)) begin
                do <= 56;
            end
            else if ((adr == 3)) begin
                do <= 12;
            end
            else if ((adr == 4)) begin
                do <= 0;
            end
            else if ((adr == 5)) begin
                do <= 1;
            end
            else if ((adr == 6)) begin
                do <= 64;
            end
            else if ((adr == 7)) begin
                do <= 48;
            end
            else if ((adr == 8)) begin
                do <= 121;
            end
            else if ((adr == 9)) begin
                do <= 16;
            end
            else if ((adr == 10)) begin
                do <= 139;
            end
            else if ((adr == 11)) begin
                do <= 248;
            end
            else if ((adr == 12)) begin
                do <= 0;
            end
        end
        else begin
            do <= ram[adr];
        end
    end
end

endmodule
