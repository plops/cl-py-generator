/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_DATA_PB_H_INCLUDED
#define PB_DATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(9600) Packet_payload_t;
typedef struct _Packet {
    uint32_t length;
    Packet_payload_t payload;
} Packet;

typedef struct _DataRequest {
    uint64_t count;
    int64_t start_index;
} DataRequest;

typedef struct _DataResponse {
    uint64_t index;
    uint64_t datetime;
    float pressure;
    float humidity;
    float temperature;
    float co2_concentration;
} DataResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Packet_init_default                      {0, {0, {0}}}
#define DataRequest_init_default                 {0, 0}
#define DataResponse_init_default                {0, 0, 0, 0, 0, 0}
#define Packet_init_zero                         {0, {0, {0}}}
#define DataRequest_init_zero                    {0, 0}
#define DataResponse_init_zero                   {0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Packet_length_tag                        1
#define Packet_payload_tag                       2
#define DataRequest_count_tag                    1
#define DataRequest_start_index_tag              2
#define DataResponse_index_tag                   1
#define DataResponse_datetime_tag                2
#define DataResponse_pressure_tag                3
#define DataResponse_humidity_tag                4
#define DataResponse_temperature_tag             5
#define DataResponse_co2_concentration_tag       6

/* Struct field encoding specification for nanopb */
#define Packet_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED32,  length,            1) \
X(a, STATIC,   SINGULAR, BYTES,    payload,           2)
#define Packet_CALLBACK NULL
#define Packet_DEFAULT NULL

#define DataRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   count,             1) \
X(a, STATIC,   SINGULAR, INT64,    start_index,       2)
#define DataRequest_CALLBACK NULL
#define DataRequest_DEFAULT NULL

#define DataResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   index,             1) \
X(a, STATIC,   SINGULAR, UINT64,   datetime,          2) \
X(a, STATIC,   SINGULAR, FLOAT,    pressure,          3) \
X(a, STATIC,   SINGULAR, FLOAT,    humidity,          4) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       5) \
X(a, STATIC,   SINGULAR, FLOAT,    co2_concentration,   6)
#define DataResponse_CALLBACK NULL
#define DataResponse_DEFAULT NULL

extern const pb_msgdesc_t Packet_msg;
extern const pb_msgdesc_t DataRequest_msg;
extern const pb_msgdesc_t DataResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Packet_fields &Packet_msg
#define DataRequest_fields &DataRequest_msg
#define DataResponse_fields &DataResponse_msg

/* Maximum encoded size of messages (where known) */
#define DataRequest_size                         22
#define DataResponse_size                        42
#define Packet_size                              9608

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
