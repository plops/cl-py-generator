# the fasthtml library hosts the website using the uvicorn library via
# http on 0.0.0.0:5001 for production runs (and if I ever implement
# users and authentication) make sure it only serves on 127.0.0.1 and
# this port is not accessible to the internet

# nginx is a good option to introduce encryption

events {}
http {
server {
    listen 80;
    listen [::]:80;
    server_name rocketrecap.com;

    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name rocketrecap.com;

    ssl_certificate  /etc/letsencrypt/live/rocketrecap.com/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/rocketrecap.com/privkey.pem;

    	# --- Gzip Compression Settings ---
        gzip on;                # Enables gzip compression.
        gzip_vary on;           # Adds the "Vary: Accept-Encoding" header. Important for caching proxies.
        gzip_proxied any;       # Compress responses, even if they are proxied from your Python app. 'any' means compress all proxied requests.
        gzip_comp_level 6;      # Compression level (1-9). 6 is a good balance between CPU usage and compression ratio.
        gzip_buffers 16 8k;     # Number and size of buffers for compression.
        gzip_http_version 1.1;  # Enable compression only for HTTP/1.1 requests (or higher).
        gzip_min_length 1000;   # Don't compress responses smaller than 1000 bytes (adjust as needed).
        gzip_types              # Specifies which MIME types to compress in addition to text/html (which is always compressed).
            text/plain
            text/css
            application/json
            application/javascript # Correct MIME type for JS
            application/x-javascript # Older MIME type for JS
            text/xml
            application/xml
            application/xml+rss
            image/svg+xml;       # SVG images are text-based
	    
    location / {
        proxy_pass http://127.0.0.1:5001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
}