|       |                                                                                       |
| gen01 | try example code for camera calibration with the images that come with opencv release |
| gen02 | display checkerboard with charuco indices, fullscreen, shift in x and y               |
| gen03 | load dng files and detect markers                                                     |
| gen04 | load png files and detect markers                                                     |
- install dependencies for cl-py-generator on popos
#+begin_example
sudo apt install jq
pip install --user black nbdev

#+end_example

- install opencv on popos
- https://gist.github.com/raulqf/f42c718a658cddc16f9df07ecc627be7
#+begin_example
sudo apt install system76-cudnn-11.2
sudo apt install libavcodec-dev libavformat-dev libswscale-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libxvidcore-dev x264 libx264-dev libfaac-dev libmp3lame-dev libtheora-dev libfaac-dev libmp3lame-dev libvorbis-dev libopencore-amrnb-dev libopencore-amrwb-dev libxine2-dev libv4l-dev v4l-utils  libgtk-3-dev python3-dev python3-pip
https://codeload.github.com/opencv/opencv_contrib/tar.gz/refs/tags/4.5.5
https://codeload.github.com/opencv/opencv/tar.gz/refs/tags/4.5.5


sudo pip install virtualenv virtualenvwrapper
sudo rm -rf ~/.cache/pip
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source /usr/local/bin/virtualenvwrapper.sh
mkvirtualenv cv -p python3
pip install numpy


mkdir b; cd b

cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D WITH_TBB=ON \
-D ENABLE_FAST_MATH=1 \
-D CUDA_FAST_MATH=1 \
-D WITH_CUBLAS=1 \
-D WITH_CUDA=ON \
-D BUILD_opencv_cudacodec=OFF \
-D WITH_CUDNN=ON \
-D OPENCV_DNN_CUDA=ON \
-D CUDA_ARCH_BIN=7.5 \
-D WITH_V4L=ON \
-D WITH_QT=OFF \
-D WITH_OPENGL=ON \
-D WITH_GSTREAMER=ON \
-D OPENCV_GENERATE_PKGCONFIG=ON \
-D OPENCV_PC_FILE_NAME=opencv.pc \
-D OPENCV_ENABLE_NONFREE=ON \
-D OPENCV_PYTHON3_INSTALL_PATH=~/.virtualenvs/cv/lib/python3.9/site-packages \
-D PYTHON_EXECUTABLE=~/.virtualenvs/cv/bin/python \
-D OPENCV_EXTRA_MODULES_PATH=~/src/opencv_contrib-4.5.5/modules \
-D INSTALL_PYTHON_EXAMPLES=OFF \
-D INSTALL_C_EXAMPLES=OFF \
-D BUILD_EXAMPLES=OFF \
-G Ninja ..

--   NVIDIA CUDA:                   YES (ver 11.2, CUFFT CUBLAS FAST_MATH)
--     NVIDIA GPU arch:             75
--     NVIDIA PTX archs:
-- 
--   cuDNN:                         YES (ver 8.1.1)

time ninja
sudo ninja install

real	15m22.306s
user	130m47.101s
sys	5m15.336s



sudo /bin/bash -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
sudo ldconfig


sudo cp -r ~/.virtualenvs/cv/lib/python3.9/site-packages/cv2 /usr/local/lib/python3.9/dist-packages
sudo nano /usr/local/lib/python3.9/dist-packages/cv2/config-3.9.py 

#+end_example


- how to run it:
#+begin_example
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source /usr/local/bin/virtualenvwrapper.sh
mkvirtualenv cv -p python3

#+end_example


- install some more python requirements into the virtual env
#+begin_example
pip install pandas jupyter
https://docs.opencv.org/4.x/dc/dbb/tutorial_py_calibration.html
sudo apt install sbcl
#+end_example

- references
  #+begin_example
https://longervision.github.io/2017/03/12/ComputerVision/OpenCV/opencv-external-posture-estimation-ArUco-board/
https://longervision.github.io/2017/03/13/ComputerVision/OpenCV/opencv-external-posture-estimation-ChArUco-board/
https://github.com/kyle-bersani/opencv-examples/tree/master/CalibrationByCharucoBoard
  #+end_example
